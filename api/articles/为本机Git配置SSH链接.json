{"title":"为本机Git配置SSH链接","slug":"为本机Git配置SSH链接","date":"2017-01-07T12:24:00.000Z","updated":"2024-05-30T05:56:50.196Z","comments":true,"path":"api/articles/为本机Git配置SSH链接.json","excerpt":"访问代码仓库时，需要建立安全链接，对于Git，常用的安全链接协议有HTTPS和SSH两种。HTTPS使用更简单，只需在向仓库提交代码时提供一下用户名和密码即可。但是经常出现需要频繁提供用户名和密码的情况，这个不能忍。相比之下，SSH的方式虽然配置有点难，但一次配置，次次可用，是个更好的方式。","covers":null,"content":"<p>访问代码仓库时，需要建立安全链接，对于Git，常用的安全链接协议有HTTPS和SSH两种。HTTPS使用更简单，只需在向仓库提交代码时提供一下用户名和密码即可。但是经常出现需要频繁提供用户名和密码的情况，这个不能忍。相比之下，SSH的方式虽然配置有点难，但一次配置，次次可用，是个更好的方式。</p>\n<span id=\"more\"></span>\n<h2 id=\"%E9%85%8D%E7%BD%AE%E6%96%B9%E5%BC%8F\" tabindex=\"-1\">配置方式<a class=\"header-anchor\" href=\"#%E9%85%8D%E7%BD%AE%E6%96%B9%E5%BC%8F\" aria-hidden=\"true\"></a></h2>\n<h3 id=\"%E9%85%8D%E7%BD%AEgit%E8%B4%A6%E6%88%B7%E4%BF%A1%E6%81%AF\" tabindex=\"-1\">配置Git账户信息<a class=\"header-anchor\" href=\"#%E9%85%8D%E7%BD%AEgit%E8%B4%A6%E6%88%B7%E4%BF%A1%E6%81%AF\" aria-hidden=\"true\"></a></h3>\n<p>要使用Git建立远程链接，肯定要先配置本机的Git账户信息啦。<br>\n首先打开本机上的bash终端，下面的命令行都是在bash终端中执行的，使用windows系统的小伙伴们不要使用cmd，需要打开git-bash才行。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name &quot;username&quot;</span><br><span class=\"line\">git config --global user.email &quot;email&quot;</span><br></pre></td></tr></table></figure>\n<p>上面引号里就是你的远程代码仓库（如github）的账号信息了，username是用户名（昵称），email是注册邮箱。</p>\n<h3 id=\"%E6%A3%80%E6%9F%A5%E6%9C%AC%E6%9C%BA%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8ssh-key\" tabindex=\"-1\">检查本机是否存在SSH Key<a class=\"header-anchor\" href=\"#%E6%A3%80%E6%9F%A5%E6%9C%AC%E6%9C%BA%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8ssh-key\" aria-hidden=\"true\"></a></h3>\n<p>检查一下本机是不是已经建立过SSH Key，如果有的话可以备份到其它地方保存，然后删除掉本机的SSH Key。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~/.ssh</span><br></pre></td></tr></table></figure>\n<p>如果执行命令后，会进入文件夹，就说明已经建立过SSH Key，需要清空。</p>\n<h3 id=\"%E7%94%9F%E6%88%90%E6%96%B0%E7%9A%84ssh-key\" tabindex=\"-1\">生成新的SSH Key<a class=\"header-anchor\" href=\"#%E7%94%9F%E6%88%90%E6%96%B0%E7%9A%84ssh-key\" aria-hidden=\"true\"></a></h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C &quot;email&quot;</span><br></pre></td></tr></table></figure>\n<p>执行命令后，会问你一些问题，是否要建立密码一类的，不用管，一路回车略过就行。然后你会在你的本机用户主目录下看到一个<code>.ssh</code>的文件夹。里面有<code>id_rsa</code>和<code>id_rsa.pub</code>两个文件，这两个就是SSH Key的秘钥对，<code>id_rsa</code>是私钥，不能泄露出去，<code>id_rsa.pub</code>是公钥，可以放心地告诉任何人。</p>\n<h3 id=\"%E4%B8%BA%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E9%85%8D%E7%BD%AEssh-key\" tabindex=\"-1\">为远程仓库配置SSH Key<a class=\"header-anchor\" href=\"#%E4%B8%BA%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E9%85%8D%E7%BD%AEssh-key\" aria-hidden=\"true\"></a></h3>\n<p>进入你的远程仓库（如github）的设置（总账户的设置而不是单个代码库的设置），点开<code>SSH and GPG keys</code>，然后点击<code>New SSH key</code>，Title随便填，再打开<code>id_rsa.pub</code>文件，复制所有内容填到Key文本框内，点击<code>Add SSH key</code>保存即可。</p>\n<h3 id=\"%E6%B5%8B%E8%AF%95ssh%E9%93%BE%E6%8E%A5\" tabindex=\"-1\">测试SSH链接<a class=\"header-anchor\" href=\"#%E6%B5%8B%E8%AF%95ssh%E9%93%BE%E6%8E%A5\" aria-hidden=\"true\"></a></h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -T git@github.com</span><br></pre></td></tr></table></figure>\n<p>执行命令后，可能会问你是否继续链接，输入<code>yes</code>回车即可。如果看到<code>Hi</code>后面是你的用户名，就说明配置成功，以后就可以直接提交代码了。</p>\n<link rel=\"stylesheet\" href=\"//cdn.jsdelivr.net/npm/katex/dist/katex.min.css\">\n<link rel=\"stylesheet\" href=\"//cdn.jsdelivr.net/npm/markdown-it-texmath/css/texmath.min.css\">\n","more":"<h2 id=\"%E9%85%8D%E7%BD%AE%E6%96%B9%E5%BC%8F\" tabindex=\"-1\">配置方式<a class=\"header-anchor\" href=\"#%E9%85%8D%E7%BD%AE%E6%96%B9%E5%BC%8F\" aria-hidden=\"true\"></a></h2>\n<h3 id=\"%E9%85%8D%E7%BD%AEgit%E8%B4%A6%E6%88%B7%E4%BF%A1%E6%81%AF\" tabindex=\"-1\">配置Git账户信息<a class=\"header-anchor\" href=\"#%E9%85%8D%E7%BD%AEgit%E8%B4%A6%E6%88%B7%E4%BF%A1%E6%81%AF\" aria-hidden=\"true\"></a></h3>\n<p>要使用Git建立远程链接，肯定要先配置本机的Git账户信息啦。<br>\n首先打开本机上的bash终端，下面的命令行都是在bash终端中执行的，使用windows系统的小伙伴们不要使用cmd，需要打开git-bash才行。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name &quot;username&quot;</span><br><span class=\"line\">git config --global user.email &quot;email&quot;</span><br></pre></td></tr></table></figure>\n<p>上面引号里就是你的远程代码仓库（如github）的账号信息了，username是用户名（昵称），email是注册邮箱。</p>\n<h3 id=\"%E6%A3%80%E6%9F%A5%E6%9C%AC%E6%9C%BA%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8ssh-key\" tabindex=\"-1\">检查本机是否存在SSH Key<a class=\"header-anchor\" href=\"#%E6%A3%80%E6%9F%A5%E6%9C%AC%E6%9C%BA%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8ssh-key\" aria-hidden=\"true\"></a></h3>\n<p>检查一下本机是不是已经建立过SSH Key，如果有的话可以备份到其它地方保存，然后删除掉本机的SSH Key。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~/.ssh</span><br></pre></td></tr></table></figure>\n<p>如果执行命令后，会进入文件夹，就说明已经建立过SSH Key，需要清空。</p>\n<h3 id=\"%E7%94%9F%E6%88%90%E6%96%B0%E7%9A%84ssh-key\" tabindex=\"-1\">生成新的SSH Key<a class=\"header-anchor\" href=\"#%E7%94%9F%E6%88%90%E6%96%B0%E7%9A%84ssh-key\" aria-hidden=\"true\"></a></h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C &quot;email&quot;</span><br></pre></td></tr></table></figure>\n<p>执行命令后，会问你一些问题，是否要建立密码一类的，不用管，一路回车略过就行。然后你会在你的本机用户主目录下看到一个<code>.ssh</code>的文件夹。里面有<code>id_rsa</code>和<code>id_rsa.pub</code>两个文件，这两个就是SSH Key的秘钥对，<code>id_rsa</code>是私钥，不能泄露出去，<code>id_rsa.pub</code>是公钥，可以放心地告诉任何人。</p>\n<h3 id=\"%E4%B8%BA%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E9%85%8D%E7%BD%AEssh-key\" tabindex=\"-1\">为远程仓库配置SSH Key<a class=\"header-anchor\" href=\"#%E4%B8%BA%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E9%85%8D%E7%BD%AEssh-key\" aria-hidden=\"true\"></a></h3>\n<p>进入你的远程仓库（如github）的设置（总账户的设置而不是单个代码库的设置），点开<code>SSH and GPG keys</code>，然后点击<code>New SSH key</code>，Title随便填，再打开<code>id_rsa.pub</code>文件，复制所有内容填到Key文本框内，点击<code>Add SSH key</code>保存即可。</p>\n<h3 id=\"%E6%B5%8B%E8%AF%95ssh%E9%93%BE%E6%8E%A5\" tabindex=\"-1\">测试SSH链接<a class=\"header-anchor\" href=\"#%E6%B5%8B%E8%AF%95ssh%E9%93%BE%E6%8E%A5\" aria-hidden=\"true\"></a></h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -T git@github.com</span><br></pre></td></tr></table></figure>\n<p>执行命令后，可能会问你是否继续链接，输入<code>yes</code>回车即可。如果看到<code>Hi</code>后面是你的用户名，就说明配置成功，以后就可以直接提交代码了。</p>\n<link rel=\"stylesheet\" href=\"//cdn.jsdelivr.net/npm/katex/dist/katex.min.css\">\n<link rel=\"stylesheet\" href=\"//cdn.jsdelivr.net/npm/markdown-it-texmath/css/texmath.min.css\">","categories":[{"name":"技术","path":"api/categories/技术.json"}],"tags":[{"name":"Git","path":"api/tags/Git.json"}]}